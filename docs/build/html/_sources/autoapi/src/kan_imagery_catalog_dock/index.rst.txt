src.kan_imagery_catalog_dock
============================

.. py:module:: src.kan_imagery_catalog_dock

.. autoapi-nested-parse::

   KAN Imagery Catalog QGIS plugin dock widget module.



Classes
-------

.. autoapisummary::

   src.kan_imagery_catalog_dock.KANImageryCatalogDock


Module Contents
---------------

.. py:class:: KANImageryCatalogDock(parent=None)

   Bases: :py:obj:`PyQt5.QtWidgets.QDockWidget`, :py:obj:`FORM_CLASS`


   KANImageryCatalogDock Dockwidget class.


   .. py:attribute:: closing_plugin


   .. py:attribute:: error_signal


   .. py:attribute:: warning_signal


   .. py:attribute:: info_signal


   .. py:attribute:: parent
      :value: None



   .. py:attribute:: settings


   .. py:attribute:: collections
      :value: []



   .. py:attribute:: sort_ascending
      :value: True



   .. py:attribute:: loading_spinner


   .. py:attribute:: thread_get_catalogs


   .. py:attribute:: thread_get_thumbnails


   .. py:attribute:: thread_load_collections_cache


   .. py:attribute:: show_ended_search_message
      :value: True



   .. py:method:: show_info(title, message)

      Show info message.



   .. py:method:: show_warning(title, message)

      Show warning message.



   .. py:method:: show_error(title, message)

      Show error message.



   .. py:method:: set_form_state(is_busy, show_spinner=False)

      Sets the form state (enabled/disabled) when the process is runnning in a separate thread.



   .. py:method:: closeEvent(event)

      Run close plugin event.



   .. py:method:: txt_max_catalog_results_text_changed()

      Event handler for textbox 'txt_max_catalog_results'.



   .. py:method:: update_cloud_coverage_label()

      Event handler for slider 'slider_cloud_coverage'.



   .. py:method:: chk_search_by_dataframe_update()

      Event handler for checkbox 'chk_search_by_dataframe'.



   .. py:method:: btn_update_layers_list_clicked()

      Event handler for button 'btn_update_layers_list'.



   .. py:method:: btn_settings_clicked()

      Event handler for button 'btn_settings'.



   .. py:method:: btn_select_catalogs_clicked()

      Event handler for button 'btn_select_catalogs'.



   .. py:method:: load_collections_cache()

      Load collections in cach√©



   .. py:method:: show_collections_form()

      Show form to select collections.



   .. py:method:: btn_sort_results_clicked()

      Event handler for button 'btn_sort_results'.



   .. py:method:: btn_show_hide_search_area_clicked()

      Event handler for button 'btn_show_hide_search_area'.



   .. py:method:: btn_show_hide_catalogs_clicked()

      Event handler for button 'btn_show_hide_catalogs'.



   .. py:method:: btn_show_hide_filters_clicked()

      Event handler for button 'btn_show_hide_filters'.



   .. py:method:: btn_get_data_clicked()

      Event handler for button 'btn_get_data'.



   .. py:method:: get_data_finished()

      Event handler for thread 'thread_get_catalogs' finished.



   .. py:method:: get_results(bounding_box, cloud_coverage, date_from, date_to, max_catalog_results)

      Get results from selected catalogs with selected filters.



   .. py:method:: get_thumbnails_in_background(catalogs_data: list)


   .. py:method:: update_progress(progress_data)

      Update thread results in Toc and DockWidget.



   .. py:method:: add_item_to_results(provider_name, host_name, collection_name, feature_data, acquisition_date, incidence_angle, cloud_coverage, image_id, feature_index, thumbnail)

      Add item to results list.



   .. py:method:: add_feature_to_footprints_layer(coordinates, footprint_id)

      Add feature to footprints layer.



